<?xml version="1.0" ?>
<Queries>
  <LogDQResult table="DeadLetterTable">SELECT 'b4841431-3bca-431e-9691-c6b673ccdcd9' AS run_id, 'Completeness' as check_type, 'Customer ID cannot be NULL' as details, &quot;adls1&quot; as source_name, &quot;customer_id&quot; as field_name, customer_id as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls1 WHERE customer_id IS NULL;</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT 'b4841431-3bca-431e-9691-c6b673ccdcd9' AS run_id, 'Uniqueness' as check_type, 'Duplicate Customer IDs found' as details, &quot;adls1&quot; as source_name, &quot;customer_id&quot; as field_name, customer_id as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls1 WHERE customer_id IN (SELECT customer_id FROM adls1 GROUP BY customer_id HAVING COUNT(*) &gt; 1);</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT 'b4841431-3bca-431e-9691-c6b673ccdcd9' AS run_id, 'Completeness' as check_type, 'Email Address cannot be NULL' as details, &quot;adls1&quot; as source_name, &quot;email&quot; as field_name, email as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls1 WHERE email IS NULL;</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT 'b4841431-3bca-431e-9691-c6b673ccdcd9' AS run_id, 'Validity' as check_type, 'Email Address must contain @ symbol' as details, &quot;adls1&quot; as source_name, &quot;email&quot; as field_name, email as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls1 WHERE email NOT LIKE '%@%';</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT 'b4841431-3bca-431e-9691-c6b673ccdcd9' AS run_id, 'Completeness' as check_type, 'Phone Number cannot be NULL' as details, &quot;adls1&quot; as source_name, &quot;phone&quot; as field_name, phone as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls1 WHERE phone IS NULL;</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT 'b4841431-3bca-431e-9691-c6b673ccdcd9' AS run_id, 'Validity' as check_type, 'Phone Number must be at least 10 digits' as details, &quot;adls1&quot; as source_name, &quot;phone&quot; as field_name, phone as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls1 WHERE LENGTH(phone) &lt; 10;</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT 'b4841431-3bca-431e-9691-c6b673ccdcd9' AS run_id, 'Completeness' as check_type, 'Date of Birth cannot be NULL' as details, &quot;adls1&quot; as source_name, &quot;date_of_birth&quot; as field_name, date_of_birth as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls1 WHERE date_of_birth IS NULL;</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT 'b4841431-3bca-431e-9691-c6b673ccdcd9' AS run_id, 'Validity' as check_type, 'Date of Birth cannot be in the future' as details, &quot;adls1&quot; as source_name, &quot;date_of_birth&quot; as field_name, date_of_birth as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls1 WHERE date_of_birth &gt; CURRENT_DATE();</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT 'b4841431-3bca-431e-9691-c6b673ccdcd9' AS run_id, 'Completeness' as check_type, 'ZIP Code cannot be NULL' as details, &quot;adls1&quot; as source_name, &quot;postal_code&quot; as field_name, postal_code as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls1 WHERE postal_code IS NULL;</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT 'b4841431-3bca-431e-9691-c6b673ccdcd9' AS run_id, 'Validity' as check_type, 'ZIP Code must be 5 digits' as details, &quot;adls1&quot; as source_name, &quot;postal_code&quot; as field_name, postal_code as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls1 WHERE postal_code RLIKE '^[0-9]{5}$' = FALSE;</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT 'b4841431-3bca-431e-9691-c6b673ccdcd9' AS run_id, 'Completeness' as check_type, 'Transaction Date cannot be NULL' as details, &quot;adls1&quot; as source_name, &quot;transaction_date&quot; as field_name, transaction_date as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls1 WHERE transaction_date IS NULL;</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT 'b4841431-3bca-431e-9691-c6b673ccdcd9' AS run_id, 'Timeliness' as check_type, 'Transaction Date should be within 1 year' as details, &quot;adls1&quot; as source_name, &quot;transaction_date&quot; as field_name, transaction_date as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls1 WHERE transaction_date &lt; DATEADD(year, -1, CURRENT_DATE());</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT 'b4841431-3bca-431e-9691-c6b673ccdcd9' AS run_id, 'Completeness' as check_type, 'Order Amount cannot be NULL' as details, &quot;adls1&quot; as source_name, &quot;order_amount&quot; as field_name, order_amount as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls1 WHERE order_amount IS NULL;</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT 'b4841431-3bca-431e-9691-c6b673ccdcd9' AS run_id, 'Validity' as check_type, 'Order Amount must be positive' as details, &quot;adls1&quot; as source_name, &quot;order_amount&quot; as field_name, order_amount as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls1 WHERE order_amount &lt;= 0;</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT 'b4841431-3bca-431e-9691-c6b673ccdcd9' AS run_id, 'Completeness' as check_type, 'Product Code cannot be NULL' as details, &quot;adls1&quot; as source_name, &quot;product_code&quot; as field_name, product_code as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls1 WHERE product_code IS NULL;</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT 'b4841431-3bca-431e-9691-c6b673ccdcd9' AS run_id, 'Completeness' as check_type, 'Account Number cannot be NULL' as details, &quot;adls1&quot; as source_name, &quot;account_number&quot; as field_name, account_number as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls1 WHERE account_number IS NULL;</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT 'b4841431-3bca-431e-9691-c6b673ccdcd9' AS run_id, 'Uniqueness' as check_type, 'Duplicate Account Numbers found' as details, &quot;adls1&quot; as source_name, &quot;account_number&quot; as field_name, account_number as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls1 WHERE account_number IN (SELECT account_number FROM adls1 GROUP BY account_number HAVING COUNT(*) &gt; 1);</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT 'b4841431-3bca-431e-9691-c6b673ccdcd9' AS run_id, 'Validity' as check_type, 'Account Number must be 10 digits' as details, &quot;adls1&quot; as source_name, &quot;account_number&quot; as field_name, account_number as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls1 WHERE LENGTH(account_number) != 10;</LogDQResult>
  <Query id="filtered_adls1">SELECT * FROM adls1 WHERE customer_id NOT IN (SELECT record_identifier_value FROM DeadLetterTable where source_name = 'adls1')</Query>
  <LogDQResult table="DeadLetterTable">SELECT '9dae8f96-b329-4ef1-967d-a37e03f9c06a' AS run_id, 'Completeness' as check_type, 'Customer ID cannot be NULL' as details, &quot;adls2&quot; as source_name, &quot;customer_id&quot; as field_name, customer_id as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls2 WHERE customer_id IS NULL;</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT '9dae8f96-b329-4ef1-967d-a37e03f9c06a' AS run_id, 'Uniqueness' as check_type, 'Duplicate Customer IDs found' as details, &quot;adls2&quot; as source_name, &quot;customer_id&quot; as field_name, customer_id as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls2 WHERE customer_id IN (SELECT customer_id FROM adls2 GROUP BY customer_id HAVING COUNT(*) &gt; 1);</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT '9dae8f96-b329-4ef1-967d-a37e03f9c06a' AS run_id, 'Completeness' as check_type, 'Customer Name cannot be NULL' as details, &quot;adls2&quot; as source_name, &quot;customer_name&quot; as field_name, customer_name as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls2 WHERE customer_name IS NULL;</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT '9dae8f96-b329-4ef1-967d-a37e03f9c06a' AS run_id, 'Validity' as check_type, 'Customer Name must contain only letters' as details, &quot;adls2&quot; as source_name, &quot;customer_name&quot; as field_name, customer_name as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls2 WHERE customer_name RLIKE '^[A-Za-z ]+$' = FALSE;</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT '9dae8f96-b329-4ef1-967d-a37e03f9c06a' AS run_id, 'Completeness' as check_type, 'Hire Date cannot be NULL' as details, &quot;adls2&quot; as source_name, &quot;join_date&quot; as field_name, join_date as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls2 WHERE join_date IS NULL;</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT '9dae8f96-b329-4ef1-967d-a37e03f9c06a' AS run_id, 'Validity' as check_type, 'Hire Date cannot be in the future' as details, &quot;adls2&quot; as source_name, &quot;join_date&quot; as field_name, join_date as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls2 WHERE join_date &gt; CURRENT_DATE();</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT '9dae8f96-b329-4ef1-967d-a37e03f9c06a' AS run_id, 'Completeness' as check_type, 'Transaction Date cannot be NULL' as details, &quot;adls2&quot; as source_name, &quot;last_purchase_date&quot; as field_name, last_purchase_date as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls2 WHERE last_purchase_date IS NULL;</LogDQResult>
  <LogDQResult table="DeadLetterTable">SELECT '9dae8f96-b329-4ef1-967d-a37e03f9c06a' AS run_id, 'Timeliness' as check_type, 'Transaction Date should be within 1 year' as details, &quot;adls2&quot; as source_name, &quot;last_purchase_date&quot; as field_name, last_purchase_date as field_value, 'customer_id' as record_identifier_name, customer_id as record_identifier_value, current_timestamp() as run_time FROM adls2 WHERE last_purchase_date &lt; DATEADD(year, -1, CURRENT_DATE());</LogDQResult>
  <Query id="filtered_adls2">SELECT * FROM adls2 WHERE customer_id NOT IN (SELECT record_identifier_value FROM DeadLetterTable where source_name = 'adls2')</Query>
  <Query id="user_query_1" type="User">SELECT t1.customer_id, t1.email, t1.phone, t1.date_of_birth, t1.postal_code, t1.transaction_date, t1.order_amount, t1.product_code, t1.account_number, t2.customer_name, t2.membership_status, t2.join_date, t2.last_purchase_date FROM filtered_adls1 AS t1 JOIN filtered_adls2 AS t2 ON t1.customer_id = t2.customer_id</Query>
  <Query id="user_query_2" type="User">SELECT customer_id, email, phone, date_of_birth, postal_code, transaction_date, order_amount, product_code, account_number, custom_upper(customer_name) as customer_name, membership_status FROM user_query_1</Query>
  <Query id="user_query_3" type="User">SELECT customer_name,sum(order_amount) FROM user_query_2 group by customer_name</Query>
</Queries>
